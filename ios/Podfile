require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'
install! 'cocoapods', :deterministic_uuids => false

target 'AwesomeTSProject' do
  config = use_native_modules!
  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-google-maps', :path => rn_maps_path
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  def find_and_replace(dir, findstr, replacestr)
    Dir[dir].each do |name|
        text = File.read(name)
        replace = text.gsub(findstr,replacestr)
        if text != replace
            puts "Fix: " + name
            File.open(name, "w") { |file| file.puts replace }
            STDOUT.flush
        end
    end
    Dir[dir + '*/'].each(&method(:find_and_replace))
  end

     post_install do |installer|
      puts("Started replacement")
        find_and_replace("./node_modules/react-native/React/Base/RCTKeyCommands.m",
                                "_modifierFlags",
                                "_modifierEventFlags")
        find_and_replace("./node_modules/react-native/React/Base/RCTKeyCommands.m",
                                "_modifiedInput",
                                "_modifiedEventInput")
        find_and_replace("./node_modules/react-native/React/Base/RCTKeyCommands.m",
                                "_isKeyDown",
                                "_isKeyEventDown")
        find_and_replace("./node_modules/react-native/React/DevSupport/RCTPackagerClient.h",
                                "handleNotification",
                                "handlePackageNotification")

        find_and_replace("./node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm",
                                "handleNotification",
                                "handlePackageNotification")
      puts("dispable catalyst")
   
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )
    
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    puts("dispable catalyst finished")
  end
end
